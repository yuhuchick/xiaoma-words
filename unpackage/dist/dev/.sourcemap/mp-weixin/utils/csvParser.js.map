{"version":3,"file":"csvParser.js","sources":["utils/csvParser.js"],"sourcesContent":["/**\n * CSVËß£ÊûêÂ∑•ÂÖ∑Á±ª\n */\nclass CSVParser {\n\tconstructor() {\n\t\tthis.words = []\n\t\tthis.categories = {\n\t\t\tzk: { name: '‰∏≠ËÄÉËØçÊ±á', wordCount: 0, icon: 'üìö', color: '#4A90E2' },\n\t\t\tgk: { name: 'È´òËÄÉËØçÊ±á', wordCount: 0, icon: 'üéì', color: '#FF6B6B' },\n\t\t\tcet4: { name: 'ÂõõÁ∫ßËØçÊ±á', wordCount: 0, icon: 'üìñ', color: '#2ECC71' },\n\t\t\tcet6: { name: 'ÂÖ≠Á∫ßËØçÊ±á', wordCount: 0, icon: 'üìö', color: '#9B59B6' },\n\t\t\tky: { name: 'ËÄÉÁ†îËØçÊ±á', wordCount: 0, icon: 'üéØ', color: '#E67E22' },\n\t\t\ttoefl: { name: 'ÊâòÁ¶èËØçÊ±á', wordCount: 0, icon: 'üåç', color: '#3498DB' },\n\t\t\tielts: { name: 'ÈõÖÊÄùËØçÊ±á', wordCount: 0, icon: 'üá¨üáß', color: '#E74C3C' },\n\t\t\tgre: { name: 'GREËØçÊ±á', wordCount: 0, icon: 'üéì', color: '#8E44AD' },\n\t\t\tbasic: { name: 'Âü∫Á°ÄËØçÊ±á', wordCount: 0, icon: 'üî§', color: '#95A5A6' }\n\t\t}\n\t}\n\t\n\t/**\n\t * Ëß£ÊûêCSVÊï∞ÊçÆ\n\t * @param {string} csvText - CSVÊñáÊú¨ÂÜÖÂÆπ\n\t * @returns {Array} Ëß£ÊûêÂêéÁöÑÂçïËØçÊï∞ÁªÑ\n\t */\n\tparseCSV(csvText) {\n\t\tconst lines = csvText.trim().split('\\n')\n\t\tconst headers = this.parseCSVLine(lines[0])\n\t\tconst words = []\n\t\t\n\t\tfor (let i = 1; i < lines.length; i++) {\n\t\t\tconst line = lines[i].trim()\n\t\t\tif (line) {\n\t\t\t\tconst values = this.parseCSVLine(line)\n\t\t\t\tconst word = this.createWordObject(headers, values)\n\t\t\t\tif (word) {\n\t\t\t\t\twords.push(word)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.words = words\n\t\tthis.updateCategories()\n\t\treturn words\n\t}\n\t\n\t/**\n\t * Ëß£ÊûêCSVË°å\n\t * @param {string} line - CSVË°å\n\t * @returns {Array} Ëß£ÊûêÂêéÁöÑÂ≠óÊÆµÊï∞ÁªÑ\n\t */\n\tparseCSVLine(line) {\n\t\tconst result = []\n\t\tlet current = ''\n\t\tlet inQuotes = false\n\t\t\n\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\tconst char = line[i]\n\t\t\t\n\t\t\tif (char === '\"') {\n\t\t\t\tinQuotes = !inQuotes\n\t\t\t} else if (char === ',' && !inQuotes) {\n\t\t\t\tresult.push(current.trim())\n\t\t\t\tcurrent = ''\n\t\t\t} else {\n\t\t\t\tcurrent += char\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult.push(current.trim())\n\t\treturn result\n\t}\n\t\n\t/**\n\t * ÂàõÂª∫ÂçïËØçÂØπË±°\n\t * @param {Array} headers - Ë°®Â§¥Êï∞ÁªÑ\n\t * @param {Array} values - ÂÄºÊï∞ÁªÑ\n\t * @returns {Object} ÂçïËØçÂØπË±°\n\t */\n\tcreateWordObject(headers, values) {\n\t\tif (headers.length !== values.length) {\n\t\t\tconsole.warn('CSVË°åÂ≠óÊÆµÊï∞Èáè‰∏çÂåπÈÖç:', headers.length, values.length)\n\t\t\treturn null\n\t\t}\n\t\t\n\t\tconst word = {}\n\t\t\n\t\tfor (let i = 0; i < headers.length; i++) {\n\t\t\tconst header = headers[i]\n\t\t\tlet value = values[i]\n\t\t\t\n\t\t\t// ÁßªÈô§ÂºïÂè∑\n\t\t\tif (value.startsWith('\"') && value.endsWith('\"')) {\n\t\t\t\tvalue = value.slice(1, -1)\n\t\t\t}\n\t\t\t\n\t\t\t// Ê†πÊçÆÂ≠óÊÆµÁ±ªÂûãËøõË°åËΩ¨Êç¢\n\t\t\tswitch (header) {\n\t\t\t\tcase 'collins':\n\t\t\t\tcase 'oxford':\n\t\t\t\tcase 'bnc':\n\t\t\t\tcase 'frq':\n\t\t\t\t\tword[header] = parseInt(value) || 0\n\t\t\t\t\tbreak\n\t\t\t\tcase 'detail':\n\t\t\t\t\ttry {\n\t\t\t\t\t\tword[header] = JSON.parse(value || '{}')\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tword[header] = {}\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase 'definition':\n\t\t\t\tcase 'translation':\n\t\t\t\t\tword[header] = value.split('\\n').filter(item => item.trim())\n\t\t\t\t\tbreak\n\t\t\t\tcase 'pos':\n\t\t\t\tcase 'exchange':\n\t\t\t\t\tword[header] = value.split('/').filter(item => item.trim())\n\t\t\t\t\tbreak\n\t\t\t\tcase 'tag':\n\t\t\t\t\tword[header] = value.split(' ').filter(item => item.trim())\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tword[header] = value\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Ê∑ªÂä†ÈªòËÆ§Â≠óÊÆµ\n\t\tword.masteryLevel = 0\n\t\tword.reviewCount = 0\n\t\tword.lastReviewDate = null\n\t\tword.nextReviewDate = null\n\t\tword.id = `w${String(word.bnc || 0).padStart(3, '0')}`\n\t\t\n\t\treturn word\n\t}\n\t\n\t/**\n\t * Êõ¥Êñ∞ÂàÜÁ±ªÁªüËÆ°\n\t */\n\tupdateCategories() {\n\t\t// ÈáçÁΩÆËÆ°Êï∞\n\t\tObject.keys(this.categories).forEach(key => {\n\t\t\tthis.categories[key].wordCount = 0\n\t\t})\n\t\t\n\t\t// ÁªüËÆ°ÊØè‰∏™ÂàÜÁ±ªÁöÑÂçïËØçÊï∞Èáè\n\t\tthis.words.forEach(word => {\n\t\t\tif (word.tag && Array.isArray(word.tag)) {\n\t\t\t\tword.tag.forEach(tag => {\n\t\t\t\t\tif (this.categories[tag]) {\n\t\t\t\t\t\tthis.categories[tag].wordCount++\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t\n\t\t// ËøáÊª§ÊéâÊ≤°ÊúâÂçïËØçÁöÑÂàÜÁ±ª\n\t\tObject.keys(this.categories).forEach(key => {\n\t\t\tif (this.categories[key].wordCount === 0) {\n\t\t\t\tdelete this.categories[key]\n\t\t\t}\n\t\t})\n\t}\n\t\n\t/**\n\t * Ê†πÊçÆÊ†áÁ≠æËé∑ÂèñÂçïËØç\n\t * @param {string} tag - Ê†áÁ≠æ\n\t * @returns {Array} ÂçïËØçÊï∞ÁªÑ\n\t */\n\tgetWordsByTag(tag) {\n\t\treturn this.words.filter(word => \n\t\t\tword.tag && Array.isArray(word.tag) && word.tag.includes(tag)\n\t\t)\n\t}\n\t\n\t/**\n\t * Ê†πÊçÆÂ§ö‰∏™Ê†áÁ≠æËé∑ÂèñÂçïËØç\n\t * @param {Array} tags - Ê†áÁ≠æÊï∞ÁªÑ\n\t * @returns {Array} ÂçïËØçÊï∞ÁªÑ\n\t */\n\tgetWordsByTags(tags) {\n\t\treturn this.words.filter(word => \n\t\t\tword.tag && Array.isArray(word.tag) && \n\t\t\ttags.some(tag => word.tag.includes(tag))\n\t\t)\n\t}\n\t\n\t/**\n\t * Ê†πÊçÆÈöæÂ∫¶Ëé∑ÂèñÂçïËØç\n\t * @param {number} minCollins - ÊúÄÂ∞èÊüØÊûóÊñØÊòüÁ∫ß\n\t * @param {number} maxCollins - ÊúÄÂ§ßÊüØÊûóÊñØÊòüÁ∫ß\n\t * @returns {Array} ÂçïËØçÊï∞ÁªÑ\n\t */\n\tgetWordsByDifficulty(minCollins = 0, maxCollins = 5) {\n\t\treturn this.words.filter(word => \n\t\t\tword.collins >= minCollins && word.collins <= maxCollins\n\t\t)\n\t}\n\t\n\t/**\n\t * Ê†πÊçÆËØçÈ¢ëËé∑ÂèñÂçïËØç\n\t * @param {number} maxBnc - ÊúÄÂ§ßBNCËØçÈ¢ë\n\t * @returns {Array} ÂçïËØçÊï∞ÁªÑ\n\t */\n\tgetWordsByFrequency(maxBnc = 1000) {\n\t\treturn this.words.filter(word => word.bnc <= maxBnc)\n\t}\n\t\n\t/**\n\t * ÊêúÁ¥¢ÂçïËØç\n\t * @param {string} query - ÊêúÁ¥¢Êü•ËØ¢\n\t * @returns {Array} ÂåπÈÖçÁöÑÂçïËØçÊï∞ÁªÑ\n\t */\n\tsearchWords(query) {\n\t\tconst lowerQuery = query.toLowerCase()\n\t\treturn this.words.filter(word => \n\t\t\tword.word.toLowerCase().includes(lowerQuery) ||\n\t\t\tword.translation.some(trans => trans.toLowerCase().includes(lowerQuery))\n\t\t)\n\t}\n\t\n\t/**\n\t * Ëé∑ÂèñÈöèÊú∫ÂçïËØç\n\t * @param {number} count - Êï∞Èáè\n\t * @param {Array} excludeIds - ÊéíÈô§ÁöÑÂçïËØçIDÊï∞ÁªÑ\n\t * @returns {Array} ÈöèÊú∫ÂçïËØçÊï∞ÁªÑ\n\t */\n\tgetRandomWords(count = 1, excludeIds = []) {\n\t\tconst availableWords = this.words.filter(word => !excludeIds.includes(word.id))\n\t\tconst result = []\n\t\t\n\t\tfor (let i = 0; i < Math.min(count, availableWords.length); i++) {\n\t\t\tconst randomIndex = Math.floor(Math.random() * availableWords.length)\n\t\t\tresult.push(availableWords.splice(randomIndex, 1)[0])\n\t\t}\n\t\t\n\t\treturn result\n\t}\n\t\n\t/**\n\t * Ëé∑ÂèñÊâÄÊúâÂçïËØç\n\t * @returns {Array} ÊâÄÊúâÂçïËØçÊï∞ÁªÑ\n\t */\n\tgetAllWords() {\n\t\treturn this.words\n\t}\n\t\n\t/**\n\t * Ëé∑ÂèñÂàÜÁ±ª‰ø°ÊÅØ\n\t * @returns {Object} ÂàÜÁ±ª‰ø°ÊÅØ\n\t */\n\tgetCategories() {\n\t\treturn this.categories\n\t}\n\t\n\t/**\n\t * Ëé∑ÂèñÊúâÊïàÁöÑÂàÜÁ±ªÂàóË°®ÔºàÊåâÂçïËØçÊï∞ÈáèÊéíÂ∫èÔºâ\n\t * @returns {Array} ÂàÜÁ±ªÂàóË°®\n\t */\n\tgetCategoryList() {\n\t\treturn Object.entries(this.categories)\n\t\t\t.filter(([key, category]) => category.wordCount > 0)\n\t\t\t.sort((a, b) => b[1].wordCount - a[1].wordCount)\n\t\t\t.map(([key, category]) => ({\n\t\t\t\tkey,\n\t\t\t\t...category\n\t\t\t}))\n\t}\n}\n\nexport default CSVParser\n"],"names":["uni"],"mappings":"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"}